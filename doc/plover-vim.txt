*plover-vim-tutor* *plover-vim*

       _                           _              
 _ __ | | _____   _____ _ ____   _(_)_ __ ___     
| '_ \| |/ _ \ \ / / _ \ '__\ \ / / | '_ ` _ \    
| |_) | | (_) \ V /  __/ |   \ V /| | | | | | |   
| .__/|_|\___/ \_/ \___|_|    \_/ |_|_| |_| |_|   
|_|                                               

help + tutorials for plover-vim

recommended layout for plover-vim

| # | T | P | H | * | * | F | P | L | T | D | ~
| S | K | W | R | * | * | R | B | G | S | Z | ~
|   |   |   |   |   |   |   |   |   |   |   | ~
|   |   | A | O |   |   | E | U |   |   |   | ~

recommended layout for plover-stenotype-vim (not compulsory)

| # | T | P | H | @ | * | F | P | L | T | D | ~
| S | K | W | R | @ | * | R | B | G | S | Z | ~
|   |   |   |   |   |   |   |   |   |   |   | ~
|   |   | A | O |   |   | E | U |   |   |   | ~


==============================================================================
CONTENTS                                                          *plover-vim-contents*

Concept                                                          |plover-vim-concept|
Background                                                       |plover-vim-background|
Principles                                                       |plover-vim-principles|
FAQ                                                              |plover-vim-FAQ|
useful-links                                                     |plover-vim-useful-links|

==============================================================================
Concept                                                          *plover-vim-concept*

- full support for steno with neovim and vim
- remove need for painful fingerspelling
- linearity in memorisation, uses Emily modifiers as baseline
- only main "systematic" vim language features covered

==============================================================================
Background                                                       *plover-vim-background*

In general I found stenography to be more ergonomic for writing prose and
figured that it would translate to a more ergonomical coding experience.
In the past I found myself feeling a little bit sore after writing
things like alt tab, control c, control v (the classics ðŸ˜‰), as well as
upper symbol keys and numbers (well, I only have a laptop keyboard)...
Then one day Aerick posted his "Emily modifiers" video, which absolutely
blew my mind. It meant you could literally one stroke literally every
ombination of commands systematically (video: https://www.youtube.com/watch?v=uQZp7RX-h6o)
It was after this video I asked the plover community if there was something
similar for vim... Turns out, there was "plovary", but that was incomplete
at the time...
So, even after 10 years after plover came to life... No one had created an
actual working vim system.
That is, until now...

(
To give credit, user2 did have some really good ideas that made this project
possible
https://github.com/openstenoproject/plover/discussions/1350
)


==============================================================================
Principles                                                     *plover-vim-principles*

- First, we want to create a system of commands as listed in this table:

| caw |     |     |
|     | yie |     |
|     |     | va} |

- now in Qwerty if you remember all of these then automatically you remember
  these ones below:

|   | w   | e   | }   |
|---+-----+-----+-----|
| c | caw | cie | ca} |
| y | yaw | yie | ya} |
| v | vaw | vie | va} |

- this is the main idea that makes vim so powerful, you can learn things "linearly"
- (note: e is from the entire plugin https://github.com/kana/vim-textobj-entire)

- so how does this apply to plover-vim?
- well, first of all here's the normal steno layout (different clusters annotated)

| -#- | -T- | -P- | -H- | -*- | -*- | +F+ | +P+ | \L\ | \T\ | \D\ | ~
| -S- | -K- | -W- | -R- | -*- | -*- | -R- | +B+ | \G\ | \S\ | \Z\ | ~
|     |     |     |     |     |     |     |     |     |     |     | ~
|     |     | -A- | -O- |     |     | =E= | =U= |     |     |     | ~

- consider `\LGTSDZ\` "unique ender" cluster:
    -  we choose `\LTSZ\` or for these "command objects" (plover-stenotype-vim: `@L`)
- consider `-FPB` "command" cluster:
    - `v` â†’ `+F+` (Fisualise)
    - `c` â†’ `+B+` (Blot)
    - `y` â†’ `+P+` (coPy)
- consider `#EU` "middles" cluster:
    - `i` â†’ `=E=` (inner: closer to the middle of the keyboard)
    - `a` â†’ `=U=` (outer: away from the middle of the keyboard)
- consider `STKPWHRAO*` "symbols" cluster:
    - `w` â†’ `-W-` (Emily modifiers)
    - `e` â†’ `-SK-` (Abby left hand fingerspelling)
    - `}` â†’ `-KWRAO*-` (Emily modifiers)

- Example of `caw` (`WUBLTSZ`):

| -#- | -T- | -P- | -H- | -*- | -*- | -F- | -P- | /L/ | /T/ | -D- |
| -S- | -K- | /W/ | -R- | -*- | -*- | -R- | /B/ | -G- | /S/ | /Z/ |
|     |     |     |     |     |     |     |     |     |     |     |
|     |     | -A- | -O- |     |     | -E- | /U/ |     |     |     |

- Example of `yie` (`SKEPLTSZ`):

| -#- | -T- | -P- | -H- | -*- | -*- | -F- | /P/ | /L/ | /T/ | -D- |
| /S/ | /K/ | -W- | -R- | -*- | -*- | -R- | -B- | -G- | /S/ | /Z/ |
|     |     |     |     |     |     |     |     |     |     |     |
|     |     | -A- | -O- |     |     | /E/ | -U- |     |     |     |

- Example of `va}` (`KWRAO*UFLTSZ`):

| -#- | -T- | -P- | -H- | /*/ | /*/ | /F/ | -P- | /L/ | /T/ | -D- |
| -S- | /K/ | /W/ | /R/ | /*/ | /*/ | -R- | -B- | -G- | /S/ | /Z/ |
|     |     |     |     |     |     |     |     |     |     |     |
|     |     | /A/ | /O/ |     |     | -E- | /U/ |     |     |     |

==============================================================================
FAQ                                                          *plover-vim-FAQ*

- What is the difference between Josiah and Emily modifiers?
    - Josiah modifiers uses left hand Abby vowels (for e, i and u) to free up
      the EU cluster, thus switching to this system is easy
- why are plover vim commands backwards? (i.e. opposite of steno order)
    - It is easier to fingerspell on the left side than the right side
    - There are fewer "commands" than "objects", so "fingerspelling" objects on
      the left side takes priority
- Will plover-vim take a long time to learn?
    - Once you have mastered Emily modifiers you are basically halfway there,
      so not really.
    - You just need to memorise a few commands and which category they belong
      in, after that you are basically set
- Is plover-vim faster than fingerspelling?
    - Yes, in the long run
- Is plover-vim faster than Qwerty?
    - You be the judge of that: |plover-vim-speedruns|
- Is plover-stenotype-vim better than normal plover-vim?
    - It doesn't use Philly shift so it's faster to use I suppose.
    - Also slightly more ergonomic
 
==============================================================================
useful-links                                                *plover-vim-useful-links*

(for anything in blue, hover with cursor and press shift-K)
link to the tutorial here: |plover-vim-tutorial|
link to the cheatsheet here: |plover-vim-cheatsheet|
link to speedruns here: |plover-vim-speedruns|

==============================================================================
 vim:tw=78:ts=2:et:ft=help:norl:
